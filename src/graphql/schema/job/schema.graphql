#schema.graphql
extend type Query {
    getJobPosts(input: JopPostFilterInput): [JobPost!]!
    getJobPost(input: GetJobPostInput!): JobPost
    getSavedJobPosts(input: SavedJobPostsInput!): [JobPost!]!
    sayHi: String
}

extend type Mutation {
    saveJobPost(input: SaveJobPostInput!): JobPost
    sayHi: String!
}

type JobPost implements Node{
    id: ID!
    title: String!
    companyId: String!
    description: String!
    jobType: JobType!
    salaryType: SalaryType!
    salary: [Int!]!
    category: [String!]!
    vacancy: Int!
    location: String!
    email: String!
    jobSite: JobSite!
    applicationDeadline: DateTime!
    isVisible: Boolean!
    experienceLevel: ExperienceLevel!

    jobExperience: Int!
    englishLevel: EnglishLevel!
    otherLanguages: [String!]!
    skills: [String!]!
    qualifications :[String!]!
    interviewQuestions :[String!]!

    createdAt: DateTime!
    updatedAt: DateTime!
}


type Application implements Node{
    id: ID!
    status:  ApplicationStatus!
    coverLetter: String!
    resume: String!
    attachment: String

    applicantId: String!
    jobPostId: String!

    createdAt: DateTime!
    updatedAt: DateTime!

    # Extra models
    jobPost: JobPost
    interview: Interview
    offer: Offer
    applicant: Applicant
}


type Interview implements Node{
    id     :     ID!
    status:      InterviewStatus
    attachment:  String
    deadline:    DateTime
    description: String!
    answerVideo: String
    answerText:  String

    applicantId: String!
    companyId: String!
    jobPostId: String!
    jobApplicationId: String

    createdAt: DateTime!
    updatedAt: DateTime!

}

type Offer implements Node{
    id:     ID!
    status:      OfferStatus
    deadline:    DateTime
    description: String!
    answerVideo: String
    answerText:  String

    applicantId: String!
    companyId: String!
    jobPostId: String!
    jobApplicationId: String

    createdAt: DateTime!
    updatedAt: DateTime!
}

input JopPostFilterInput {
    companyId: String!
}

input GetJobPostInput {
    id: String!
}

input SavedJobPostsInput {
    accountId: String!
}

input SaveJobPostInput {
    jobPostId: String!
    accountId: String!
    save: Boolean!
}


enum SalaryType {
    HOURLY
    MONTHLY
    YEARLY
    ONE_TIME
}

enum EnglishLevel {
    BASIC
    CONVERSATIONAL
    FLUENT
    NATIVE
}

enum JobSite {
    ONSITE
    REMOTE
    HYBRID
}

enum JobType {
    CONTRACTUAL
    INTERNSHIP
    FULL_TIME
    PART_TIME
}

enum ExperienceLevel {
    Beginner
    Intermediate
    Expert
    Junior
    Senior
}

enum ApplicationStatus {
    PENDING
    INTERVIEW
    ACCEPTED
    REJECTED
}

enum InterviewStatus {
    PENDING
    APPLICANT_REFUSED
    APPLICANT_RESPONDED
    ACCEPTED
    REJECTED
}

enum OfferStatus {
    PENDING
    APPLICANT_REFUSED
    ACCEPTED
}

