#schema.graphql
extend type Query{
    me (input: MeInput!): AccountPayload
    findAccount(input: AccountInput!): FindOnePayload
}


type AccountPayload implements IAccount{
    id: String!
    email: String!
    emailVerified: DateTime
    firstName: String!
    lastName: String!
    createdAt: DateTime!
    phone: String
    image: String
    accountType: AccountType!

    oAuthClient: [OAuth!]!
    company: CompanyLight
    applicant: ApplicantLight
    affiliate: AffiliateLight
}

input MeInput {
    accountId: String!
}


input AccountInput {
    id: ID
    email: String
    phone: String
}

input OAuthAccount {
    provider: String
}

input AccountFilterInput {
    id: ID
    email: String
    phone: String
}

enum AccountType {
    COMPANY
    APPLICANT
    AFFILIATE
}

enum Gender {
    MALE
    FEMALE
    OTHER
}

interface IAccount {
    id: String!
    email: String!
    firstName: String!
    lastName: String!
    accountType: AccountType!
    createdAt: DateTime!
    phone: String
    image: String
}

type Account implements IAccount{
    id: String!
    email: String!
    firstName: String!
    lastName: String!
    accountType: AccountType!
    createdAt: DateTime!
    phone: String
    image: String
}





scalar DateTime

#type Subscription

